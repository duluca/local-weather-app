{
  "name": "localcast-weather",
  "version": "14.0.0",
  "license": "MIT",
  "config": {
    "imageRepo": "duluca/localcast-weather",
    "imageName": "localcast-weather",
    "imagePort": "8080",
    "internalContainerPort": "3000"
  },
  "scripts": {
    "ng": "ng",
    "style:fix": "prettier --write \"**/{src,tests,e2e}/**/*.{*css,ts}\"",
    "style": "prettier --check \"**/{src,tests,e2e}/**/*.{*css,ts}\"",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "test": "ng test local-weather-app",
    "test:debug": "npm test -- --source-map",
    "test:coverage": "npm test -- --code-coverage",
    "lint": "run-p lint:ts lint:tsc",
    "lint:fix": "run-s lint:ts:fix lint:tsc",
    "e2e": "ng e2e local-weather-app",
    "build:prod": "ng build --configuration production",
    "predocker:build": "npm run build",
    "docker:build": "cross-conf-env docker image build . -t $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:build": "npm run docker:tag",
    "docker:tag": " cross-conf-env docker image tag $npm_package_config_imageRepo:$npm_package_version $npm_package_config_imageRepo:latest",
    "docker:run": "run-s -c docker:stop docker:runHelper",
    "docker:runHelper": "cross-conf-env docker run -e NODE_ENV=local --rm --name $npm_package_config_imageName -d -p $npm_package_config_imagePort:$npm_package_config_internalContainerPort $npm_package_config_imageRepo",
    "predocker:publish": "echo Attention! Ensure `docker login` information is correct.",
    "docker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:latest",
    "docker:clean": "cross-conf-env docker rm -f $npm_package_config_imageName",
    "docker:taillogs": "echo Web Server Logs: && cross-conf-env docker logs -f $npm_package_config_imageName",
    "docker:debugmessage": "echo Docker Debug Completed Successfully! Hit Ctrl+C to terminate log tailing.",
    "docker:debug": "run-s -cs docker:build docker:run docker:open docker:debugmessage docker:taillogs",
    "prevercel:publish": "npm run build:prod",
    "vercel:publish": "vercel --platform-version 2 --prod dist/local-weather-app",
    "test:a11y": "pa11y --standard Section508 http://localhost:4200",
    "test:a11y:ci": "pa11y-ci",
    "gcloud:tag": "docker tag duluca/localcast-weather gcr.io/localcast-weather/localcast-weather",
    "gcloud:push": "docker push gcr.io/localcast-weather/localcast-weather",
    "gcloud:build": "gcloud builds submit --tag gcr.io/localcast-weather/localcast-weather --project localcast-weather",
    "gcloud:deploy": "gcloud run deploy --image gcr.io/localcast-weather/localcast-weather --platform managed --project localcast-weather --region us-east1",
    "init:env": "init-dev-env generate-dot-env example.env -f",
    "lint:ts": "tslint --config tslint.json --project . -e \"**/{test,polyfills}.ts\"",
    "lint:ts:fix": "tslint --config tslint.json --fix --project . -e \"**/{test,polyfills}.ts\"",
    "lint:tsc": "tsc --noEmit --skipLibCheck",
    "docker:stop": "cross-conf-env docker stop $npm_package_config_imageName || true",
    "docker:open": "sleep 2 && cross-conf-env open-cli http://localhost:$npm_package_config_imagePort"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "14.3.0",
    "@angular/cdk": "14.2.7",
    "@angular/common": "14.3.0",
    "@angular/compiler": "14.3.0",
    "@angular/core": "14.3.0",
    "@angular/flex-layout": "^14.0.0-beta.41",
    "@angular/forms": "14.3.0",
    "@angular/material": "14.2.7",
    "@angular/platform-browser": "14.3.0",
    "@angular/platform-browser-dynamic": "14.3.0",
    "@angular/platform-server": "14.3.0",
    "@angular/router": "14.3.0",
    "@ngrx/effects": "^14.3.3",
    "@ngrx/store": "^14.3.3",
    "@ngrx/store-devtools": "^14.3.3",
    "rxjs": "^7.8.1",
    "subsink": "^1.0.2",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^14.2.12",
    "@angular/cli": "14.2.12",
    "@angular/compiler-cli": "^14.3.0",
    "@angular/language-service": "^14.3.0",
    "@ngrx/schematics": "^14.3.3",
    "@types/jasmine": "~4.0.2",
    "@types/jasminewd2": "~2.0.10",
    "@types/node": "^16.4.10",
    "angular-unit-test-helper": "^14.0.1",
    "codelyzer": "^6.0.2",
    "cross-conf-env": "^1.3.0",
    "dev-norms": "^2.0.4",
    "init-dev-env": "^2.0.0",
    "jasmine": "^4.0.2",
    "jasmine-core": "~4.0.1",
    "jasmine-spec-reporter": "~7.0.0",
    "karma": "~6.3.4",
    "karma-chrome-launcher": "~3.1.0",
    "karma-cli": "~2.0.0",
    "karma-coverage-istanbul-reporter": "~3.0.3",
    "karma-jasmine": "~4.0.1",
    "karma-jasmine-html-reporter": "^1.7.0",
    "karma-junit-reporter": "^2.0.1",
    "ng-mocks": "^14.11.0",
    "npm-run-all": "^4.1.5",
    "open-cli": "^7.0.0",
    "pa11y": "^6.2.3",
    "pa11y-ci": "^3.0.1",
    "prettier": "^2.3.2",
    "protractor": "~7.0.0",
    "rimraf": "^3.0.2",
    "ts-node": "^10.9.1",
    "tslib": "^2.6.1",
    "tslint": "~6.1.3",
    "tslint-config-prettier": "^1.18.0",
    "tslint-etc": "^1.13.10",
    "tslint-plugin-prettier": "^2.3.0",
    "tsutils": "^3.21.0",
    "typescript": "^4.6.4",
    "vercel": "^31.2.3"
  }
}
